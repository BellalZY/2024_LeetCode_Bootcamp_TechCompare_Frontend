{"ast":null,"code":"var _jsxFileName = \"/Users/ericyuan/Desktop/nyu/2023_2024_2/leetcode/\\u671F\\u4E2D/front/2024_LeetCode_Bootcamp_TechCompare_Fontend/techcompare_fontend/src/pages/ProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, CardMedia, Typography } from '@mui/material';\n\n// Import the JSON data\nimport productsData from '../testDataSet/products.json';\n\n// Function to fetch product details by ID from the imported dataset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchProductById = async id => {\n  // Assuming your product IDs are stored as strings in the JSON file.\n  // If they are numbers, you might need to parse the id parameter to a number\n  const product = productsData.find(product => product.id.toString() === id);\n  return product; // Returns undefined if no product matches\n};\nexport default function ProductPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the `id` param from the URL\n  const [product, setProduct] = useState({\n    id: '',\n    productName: '',\n    imageLink: '',\n    price: ''\n  });\n  useEffect(() => {\n    // Fetch product details and update state\n    fetchProductById(id).then(productDetails => {\n      if (productDetails) {\n        setProduct({\n          id: productDetails.id,\n          productName: productDetails.productName,\n          imageLink: productDetails.imageLink,\n          price: productDetails.price\n        });\n      }\n    });\n  }, [id]); // Re-run this effect if `id` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"id: \", product.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"productName: \", product.productName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"imageLink: \", product.imageLink]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"price: \", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductPage, \"b7bgrxUdMrwKQmY72ttmwysWB78=\", false, function () {\n  return [useParams];\n});\n_c = ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Card","CardContent","CardMedia","Typography","productsData","jsxDEV","_jsxDEV","fetchProductById","id","product","find","toString","ProductPage","_s","setProduct","productName","imageLink","price","then","productDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericyuan/Desktop/nyu/2023_2024_2/leetcode/期中/front/2024_LeetCode_Bootcamp_TechCompare_Fontend/techcompare_fontend/src/pages/ProductPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, CardMedia, Typography } from '@mui/material';\n\n// Import the JSON data\nimport productsData from '../testDataSet/products.json'; \n\n// Function to fetch product details by ID from the imported dataset\nconst fetchProductById = async (id) => {\n  // Assuming your product IDs are stored as strings in the JSON file.\n  // If they are numbers, you might need to parse the id parameter to a number\n  const product = productsData.find(product => product.id.toString() === id);\n  return product; // Returns undefined if no product matches\n};\n\nexport default function ProductPage() {\n    const { id } = useParams(); // Get the `id` param from the URL\n    const [product, setProduct] = useState({ id: '', productName: '', imageLink: '', price: '' });\n\n    useEffect(() => {\n        // Fetch product details and update state\n        fetchProductById(id).then(productDetails => {\n        if (productDetails) {\n            setProduct({\n            id: productDetails.id,\n            productName: productDetails.productName,\n            imageLink: productDetails.imageLink,\n            price: productDetails.price\n            });\n        }\n        });\n    }, [id]); // Re-run this effect if `id` changes\n\n  return (\n    <div>\n        <p>id: {product.id}</p>\n        <p>productName: {product.productName}</p>\n        <p>imageLink: {product.imageLink}</p>\n        <p>price: {product.price}</p> {/* Displaying the product name */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;;AAExE;AACA,OAAOC,YAAY,MAAM,8BAA8B;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EACrC;EACA;EACA,MAAMC,OAAO,GAAGL,YAAY,CAACM,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACD,EAAE,CAACG,QAAQ,CAAC,CAAC,KAAKH,EAAE,CAAC;EAC1E,OAAOC,OAAO,CAAC,CAAC;AAClB,CAAC;AAED,eAAe,SAASG,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEL;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACU,OAAO,EAAEK,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IAAEW,EAAE,EAAE,EAAE;IAAEO,WAAW,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAE7FnB,SAAS,CAAC,MAAM;IACZ;IACAS,gBAAgB,CAACC,EAAE,CAAC,CAACU,IAAI,CAACC,cAAc,IAAI;MAC5C,IAAIA,cAAc,EAAE;QAChBL,UAAU,CAAC;UACXN,EAAE,EAAEW,cAAc,CAACX,EAAE;UACrBO,WAAW,EAAEI,cAAc,CAACJ,WAAW;UACvCC,SAAS,EAAEG,cAAc,CAACH,SAAS;UACnCC,KAAK,EAAEE,cAAc,CAACF;QACtB,CAAC,CAAC;MACN;IACA,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEF,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,GAAG,MAAI,EAACX,OAAO,CAACD,EAAE;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,GAAG,eAAa,EAACX,OAAO,CAACM,WAAW;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzClB,OAAA;MAAAc,QAAA,GAAG,aAAW,EAACX,OAAO,CAACO,SAAS;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrClB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACX,OAAO,CAACQ,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACX,EAAA,CA1BuBD,WAAW;EAAA,QAChBb,SAAS;AAAA;AAAA0B,EAAA,GADJb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}